"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Slider_1 = require("../Objects/osu!/HitObjects/Slider");
class FingerControl {
    static CalculateFingerControlDiff(hitObjects, clockRate) {
        let prevTime = hitObjects[0].StartTime / 1000;
        let currStrain = 0;
        let prevStrainTime = 0;
        let repeatStrainCount = 1;
        const strainHistory = [0];
        for (let i = 1; i < hitObjects.length; i++) {
            const currTime = hitObjects[i].StartTime / 1000;
            const deltaTime = (currTime - prevTime) / clockRate;
            const strainTime = Math.max(deltaTime, 0.046875);
            const strainDecayBase = Math.pow(0.9, 1 / Math.min(strainTime, 0.2));
            currStrain *= Math.pow(strainDecayBase, deltaTime);
            strainHistory.push(currStrain);
            let strain = 0.1 / strainTime;
            if (Math.abs(strainTime - prevStrainTime) > 0.004)
                repeatStrainCount = 1;
            else
                repeatStrainCount++;
            if (hitObjects[i] instanceof Slider_1.Slider)
                strain /= 2;
            if (repeatStrainCount % 2 === 0)
                strain = 0;
            else
                strain /= Math.pow(1.25, repeatStrainCount);
            currStrain += strain;
            prevTime = currTime;
            prevStrainTime = strainTime;
        }
        let strainHistoryArray = strainHistory.splice(0);
        strainHistoryArray = strainHistoryArray.sort((a, b) => a - b);
        strainHistoryArray = strainHistoryArray.reverse();
        let diff = 0;
        const k = 0.95;
        for (let i = 0; i < hitObjects.length; i++) {
            diff += (strainHistoryArray[i] * Math.pow(k, i));
        }
        return diff * (1 - k) * 1.1;
    }
}
exports.default = FingerControl;
