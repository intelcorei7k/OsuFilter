import { HitObject } from "./Objects/osu!/HitObjects/HitObject";
import { Vector } from "./Objects/Vector";
declare class OsuMovement {
    private static readonly correction0MovingSpline;
    private static readonly numCoeffs;
    private static readonly ds0f;
    private static readonly ks0f;
    private static readonly scales0f;
    private static readonly coeffs0f;
    private static readonly ds0s;
    private static readonly ks0s;
    private static readonly scales0s;
    private static readonly coeffs0s;
    private static readonly ds3f;
    private static readonly ks3f;
    private static readonly scales3f;
    private static readonly coeffs3f;
    private static readonly ds3s;
    private static readonly ks3s;
    private static readonly scales3s;
    private static readonly coeffs3s;
    private static k0fInterp;
    private static scale0fInterp;
    private static coeffs0fInterps;
    private static k0sInterp;
    private static scale0sInterp;
    private static coeffs0sInterps;
    private static k3fInterp;
    private static scale3fInterp;
    private static coeffs3fInterps;
    private static k3sInterp;
    private static scale3sInterp;
    private static coeffs3sInterps;
    private static tRatioThreshold;
    private static correction0Still;
    RawMT: number;
    D: number;
    MT: number;
    IP12: number;
    Cheesability: number;
    CheesableRatio: number;
    Time: number;
    EndsOnSlider: boolean;
    static Initialize(): void;
    static ExtractMovementFirstObject(obj: HitObject): OsuMovement[];
    static ExtractMovement(obj0: HitObject, obj1: HitObject, obj2: HitObject, obj3: HitObject, tapStrain: Vector, clockRate: number): OsuMovement[];
    static GetEmptyMovement(time: number): OsuMovement;
    private static prepareInterp;
    private static calcCorrection0or3;
    private static calcCorrection0Stop;
}
export default OsuMovement;
